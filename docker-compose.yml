version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ma_platform_postgres
    environment:
      POSTGRES_DB: ma_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ma_platform_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ma_platform_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ma_platform_network

  # M&A Platform Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ma_platform_app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ma_platform
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - ma_platform_network
    command: npm run dev

  # Prisma Studio (Database GUI)
  prisma-studio:
    image: node:18-alpine
    container_name: ma_platform_prisma_studio
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ma_platform
    ports:
      - "5555:5555"
    depends_on:
      - postgres
    volumes:
      - .:/app
    networks:
      - ma_platform_network
    command: npx prisma studio --hostname 0.0.0.0 --port 5555

volumes:
  postgres_data:
  redis_data:

networks:
  ma_platform_network:
    driver: bridge 